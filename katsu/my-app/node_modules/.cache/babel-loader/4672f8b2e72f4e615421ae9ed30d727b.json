{"ast":null,"code":"var _jsxFileName = \"E:\\\\Code\\\\map\\\\katsu\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useState, useRef, useCallback } from \"react\";\nimport ReactMapGL, { AttributionControl, FullscreenControl, GeolocateControl, ScaleControl, Popup, NavigationControl } from \"react-map-gl\";\nimport Pins from \"./pins.js\";\nimport CityInfo from \"./city-info.js\";\nimport CITIES from \"./data/cities.json\";\nimport { Editor, DrawPolygonMode, EditingMode } from 'react-map-gl-draw';\nimport { getFeatureStyle, getEditHandleStyle } from './style.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOKEN = \"pk.eyJ1Ijoia2F0c3UxIiwiYSI6ImNrbWxudzNsaTFjb2gyb3Frc2puNWp2YWsifQ.huIA73MzdpMzWEKOUFBFcQ\";\nconst attributionStyle = {\n  right: 0,\n  bottom: 0\n};\nconst fullscreenControlStyle = {\n  right: 10,\n  bottom: 50\n};\nconst geolocateControlStyle = {\n  right: 10,\n  top: 10\n};\nconst navControlStyle = {\n  right: 10,\n  top: 50\n};\nconst scaleControlStyle = {\n  bottom: 36,\n  left: 0,\n  padding: \"10px\"\n};\n\nfunction App() {\n  _s();\n\n  const [viewport, setViewport] = useState({\n    width: \"100vw\",\n    height: \"100vh\",\n    latitude: 35.6895,\n    longitude: 139.69171,\n    // longitude: -122.45,\n    // latitude: 37.78,\n    //zoom: 8\n    zoom: 8,\n    bearing: 0,\n    pitch: 0\n  });\n  const [popupInfo, setPopupInfo] = useState(null);\n  const [mode, setMode] = useState(null);\n  const [selectedFeatureIndex, setSelectedFeatureIndex] = useState(null);\n  const editorRef = useRef(null);\n  const onSelect = useCallback(options => {\n    setSelectedFeatureIndex(options && options.selectedFeatureIndex);\n  }, []);\n  const onDelete = useCallback(() => {\n    if (selectedFeatureIndex !== null && selectedFeatureIndex >= 0) {\n      editorRef.current.deleteFeatures(selectedFeatureIndex);\n    }\n  }, [selectedFeatureIndex]);\n  const onUpdate = useCallback(({\n    editType\n  }) => {\n    if (editType === 'addFeature') {\n      setMode(new EditingMode());\n    }\n  }, []);\n\n  const drawTools = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mapboxgl-ctrl-top-left\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mapboxgl-ctrl-group mapboxgl-ctrl\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mapbox-gl-draw_ctrl-draw-btn mapbox-gl-draw_polygon\",\n        title: \"Polygon tool (p)\",\n        onClick: () => setMode(new DrawPolygonMode())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mapbox-gl-draw_ctrl-draw-btn mapbox-gl-draw_trash\",\n        title: \"Delete\",\n        onClick: onDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n\n  const features = editorRef.current && editorRef.current.getFeatures();\n  const selectedFeature = features && (features[selectedFeatureIndex] || features[features.length - 1]);\n  return /*#__PURE__*/_jsxDEV(ReactMapGL, { ...viewport,\n    maxZoom: 15,\n    mapboxApiAccessToken: TOKEN,\n    mapStyle: \"mapbox://styles/katsu1/ckmmxp0ae1ikv17pn2hf0nv09\",\n    onViewportChange: nextViewport => setViewport(nextViewport),\n    attributionControl: false,\n    children: [/*#__PURE__*/_jsxDEV(AttributionControl, {\n      compact: true,\n      style: attributionStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullscreenControl, {\n      style: fullscreenControlStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GeolocateControl, {\n      style: geolocateControlStyle,\n      positionOptions: {\n        enableHighAccuracy: true\n      },\n      trackUserLocation: true,\n      auto: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavigationControl, {\n      style: navControlStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScaleControl, {\n      style: scaleControlStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pins, {\n      data: CITIES,\n      onClick: setPopupInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), popupInfo && /*#__PURE__*/_jsxDEV(Popup, {\n      tipSize: 5,\n      anchor: \"top\",\n      longitude: popupInfo.longitude,\n      latitude: popupInfo.latitude,\n      closeOnClick: false,\n      onClose: setPopupInfo,\n      children: /*#__PURE__*/_jsxDEV(CityInfo, {\n        info: popupInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      ref: editorRef,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      clickRadius: 12,\n      mode: mode,\n      onSelect: onSelect,\n      onUpdate: onUpdate,\n      editHandleShape: 'circle',\n      featureStyle: getFeatureStyle,\n      editHandleStyle: getEditHandleStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), drawTools]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TWOpj/fW6CkS1DSmt+hSpDqNTYg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/Code/map/katsu/my-app/src/App.js"],"names":["React","useState","useRef","useCallback","ReactMapGL","AttributionControl","FullscreenControl","GeolocateControl","ScaleControl","Popup","NavigationControl","Pins","CityInfo","CITIES","Editor","DrawPolygonMode","EditingMode","getFeatureStyle","getEditHandleStyle","TOKEN","attributionStyle","right","bottom","fullscreenControlStyle","geolocateControlStyle","top","navControlStyle","scaleControlStyle","left","padding","App","viewport","setViewport","width","height","latitude","longitude","zoom","bearing","pitch","popupInfo","setPopupInfo","mode","setMode","selectedFeatureIndex","setSelectedFeatureIndex","editorRef","onSelect","options","onDelete","current","deleteFeatures","onUpdate","editType","drawTools","features","getFeatures","selectedFeature","length","nextViewport","enableHighAccuracy"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useState, useRef, useCallback } from \"react\";\nimport ReactMapGL, {\n  AttributionControl,\n  FullscreenControl,\n  GeolocateControl,\n  ScaleControl,\n  Popup,\n  NavigationControl,\n} from \"react-map-gl\";\nimport Pins from \"./pins.js\";\nimport CityInfo from \"./city-info.js\";\nimport CITIES from \"./data/cities.json\";\nimport {Editor, DrawPolygonMode, EditingMode} from 'react-map-gl-draw';\nimport {getFeatureStyle, getEditHandleStyle} from './style.js';\n\n\nconst TOKEN =\n  \"pk.eyJ1Ijoia2F0c3UxIiwiYSI6ImNrbWxudzNsaTFjb2gyb3Frc2puNWp2YWsifQ.huIA73MzdpMzWEKOUFBFcQ\";\n\nconst attributionStyle = {\n  right: 0,\n  bottom: 0,\n};\n\nconst fullscreenControlStyle = {\n  right: 10,\n  bottom: 50,\n};\n\nconst geolocateControlStyle = {\n  right: 10,\n  top: 10,\n};\n\nconst navControlStyle = {\n  right: 10,\n  top: 50,\n};\n\nconst scaleControlStyle = {\n  bottom: 36,\n  left: 0,\n  padding: \"10px\",\n};\n\nfunction App() {\n  const [viewport, setViewport] = useState({\n    width: \"100vw\",\n    height: \"100vh\",\n    latitude: 35.6895,\n    longitude: 139.69171,\n    // longitude: -122.45,\n    // latitude: 37.78,\n    //zoom: 8\n    zoom: 8,\n    bearing: 0,\n    pitch: 0,\n  });\n\n  const [popupInfo, setPopupInfo] = useState(null);\n\n  const [mode, setMode] = useState(null);\n  const [selectedFeatureIndex, setSelectedFeatureIndex] = useState(null);\n  const editorRef = useRef(null);\n\n  const onSelect = useCallback(options => {\n    setSelectedFeatureIndex(options && options.selectedFeatureIndex);\n  }, []);\n\n  const onDelete = useCallback(() => {\n    if (selectedFeatureIndex !== null && selectedFeatureIndex >= 0) {\n      editorRef.current.deleteFeatures(selectedFeatureIndex);\n    }\n  }, [selectedFeatureIndex]);\n\n  const onUpdate = useCallback(({editType}) => {\n    if (editType === 'addFeature') {\n      setMode(new EditingMode());\n    }\n  }, []);\n  const drawTools = (\n    <div className=\"mapboxgl-ctrl-top-left\">\n      <div className=\"mapboxgl-ctrl-group mapboxgl-ctrl\">\n        <button\n          className=\"mapbox-gl-draw_ctrl-draw-btn mapbox-gl-draw_polygon\"\n          title=\"Polygon tool (p)\"\n          onClick={() => setMode(new DrawPolygonMode())}\n        />\n        <button\n          className=\"mapbox-gl-draw_ctrl-draw-btn mapbox-gl-draw_trash\"\n          title=\"Delete\"\n          onClick={onDelete}\n        />\n      </div>\n    </div>\n  );\n\n  const features = editorRef.current && editorRef.current.getFeatures();\n  const selectedFeature =\n    features && (features[selectedFeatureIndex] || features[features.length - 1]);\n\n  return (\n    <ReactMapGL\n      {...viewport}\n      maxZoom={15}\n      mapboxApiAccessToken={TOKEN}\n      mapStyle=\"mapbox://styles/katsu1/ckmmxp0ae1ikv17pn2hf0nv09\"\n      onViewportChange={(nextViewport) => setViewport(nextViewport)}\n      attributionControl={false}\n    >\n      <AttributionControl compact={true} style={attributionStyle} />\n      <FullscreenControl style={fullscreenControlStyle} />\n      <GeolocateControl\n        style={geolocateControlStyle}\n        positionOptions={{ enableHighAccuracy: true }}\n        trackUserLocation={true}\n        auto={false}\n      />\n      <NavigationControl style={navControlStyle} />\n      <ScaleControl style={scaleControlStyle} />\n      <Pins data={CITIES} onClick={setPopupInfo} />\n      {popupInfo && (\n        <Popup\n          tipSize={5}\n          anchor=\"top\"\n          longitude={popupInfo.longitude}\n          latitude={popupInfo.latitude}\n          closeOnClick={false}\n          onClose={setPopupInfo}\n        >\n          <CityInfo info={popupInfo} />\n        </Popup>\n      )}\n      <Editor\n          ref={editorRef}\n          style={{width: '100%', height: '100%'}}\n          clickRadius={12}\n          mode={mode}\n          onSelect={onSelect}\n          onUpdate={onUpdate}\n          editHandleShape={'circle'}\n          featureStyle={getFeatureStyle}\n          editHandleStyle={getEditHandleStyle}\n        />\n        {drawTools}\n    </ReactMapGL>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}