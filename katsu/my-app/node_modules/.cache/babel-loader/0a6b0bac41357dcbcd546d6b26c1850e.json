{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.featureStyle = featureStyle;\nexports.editHandleStyle = editHandleStyle;\n\nvar _constants = require(\"./constants\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar RECT_STYLE = {\n  stroke: '#7ac943',\n  strokeWidth: 2,\n  x: -6,\n  y: -6,\n  height: 12,\n  width: 12\n};\nvar CIRCLE_RADIUS = 8;\nvar SELECTED_STYLE = {\n  stroke: 'rgb(38, 181, 242)',\n  strokeWidth: 2,\n  fill: 'rgb(189,189,189)',\n  fillOpacity: 0.3\n};\nvar HOVERED_STYLE = {\n  stroke: 'rgb(38, 181, 242)',\n  strokeWidth: 2,\n  fill: 'rgb(122,202,67)',\n  fillOpacity: 0.3\n};\nvar UNCOMMITTED_STYLE = {\n  stroke: 'rgb(189,189,189)',\n  strokeDasharray: '4,2',\n  strokeWidth: 2,\n  fill: 'rgb(189,189,189)',\n  fillOpacity: 0.1\n};\nvar INACTIVE_STYLE = UNCOMMITTED_STYLE;\nvar DEFAULT_STYLE = {\n  stroke: '#000000',\n  strokeWidth: 2,\n  fill: '#a9a9a9',\n  fillOpacity: 0.1\n};\n\nfunction featureStyle(_ref) {\n  var feature = _ref.feature,\n      state = _ref.state;\n  var type = feature.properties.shape || feature.geometry.type;\n  var style = null;\n\n  switch (state) {\n    case _constants.RENDER_STATE.SELECTED:\n      style = _objectSpread({}, SELECTED_STYLE);\n      break;\n\n    case _constants.RENDER_STATE.HOVERED:\n      style = _objectSpread({}, HOVERED_STYLE);\n      break;\n\n    case _constants.RENDER_STATE.UNCOMMITTED:\n    case _constants.RENDER_STATE.CLOSING:\n      style = _objectSpread({}, UNCOMMITTED_STYLE);\n      break;\n\n    case _constants.RENDER_STATE.INACTIVE:\n      style = _objectSpread({}, INACTIVE_STYLE);\n      break;\n\n    default:\n      style = _objectSpread({}, DEFAULT_STYLE);\n  }\n\n  switch (type) {\n    case _constants.SHAPE.POINT:\n      style.r = CIRCLE_RADIUS;\n      break;\n\n    case _constants.SHAPE.LINE_STRING:\n      style.fill = 'none';\n      break;\n\n    case _constants.SHAPE.POLYGON:\n      if (state === _constants.RENDER_STATE.CLOSING) {\n        style.strokeDasharray = '4,2';\n      }\n\n      break;\n\n    case _constants.SHAPE.RECTANGLE:\n      if (state === _constants.RENDER_STATE.UNCOMMITTED) {\n        style.strokeDasharray = '4,2';\n      }\n\n      break;\n\n    default:\n  }\n\n  return style;\n}\n\nfunction editHandleStyle(_ref2) {\n  var feature = _ref2.feature,\n      shape = _ref2.shape,\n      index = _ref2.index,\n      state = _ref2.state;\n  var style = {};\n\n  switch (state) {\n    case _constants.RENDER_STATE.SELECTED:\n      style = _objectSpread({}, SELECTED_STYLE);\n      break;\n\n    case _constants.RENDER_STATE.HOVERED:\n      style = _objectSpread({}, HOVERED_STYLE);\n      break;\n\n    case _constants.RENDER_STATE.UNCOMMITTED:\n    case _constants.RENDER_STATE.CLOSING:\n      style = _objectSpread({}, UNCOMMITTED_STYLE);\n      break;\n\n    case _constants.RENDER_STATE.INACTIVE:\n      style = _objectSpread({}, INACTIVE_STYLE);\n      break;\n\n    default:\n      style = _objectSpread({}, DEFAULT_STYLE);\n  }\n\n  switch (shape) {\n    case 'circle':\n      //@ts-ignore\n      style.r = CIRCLE_RADIUS;\n      break;\n\n    case 'rect':\n      style = _objectSpread({}, style, {}, RECT_STYLE);\n      break;\n\n    default:\n  }\n\n  return style;\n}","map":{"version":3,"sources":["../src/style.ts"],"names":["RECT_STYLE","stroke","strokeWidth","x","y","height","width","CIRCLE_RADIUS","SELECTED_STYLE","fill","fillOpacity","HOVERED_STYLE","UNCOMMITTED_STYLE","strokeDasharray","INACTIVE_STYLE","DEFAULT_STYLE","feature","state","type","style","RENDER_STATE","SHAPE","shape","index"],"mappings":"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","sourcesContent":["import { RENDER_STATE, SHAPE } from './constants';\n\nconst RECT_STYLE = {\n  stroke: '#7ac943',\n  strokeWidth: 2,\n  x: -6,\n  y: -6,\n  height: 12,\n  width: 12,\n};\n\nconst CIRCLE_RADIUS = 8;\n\nconst SELECTED_STYLE = {\n  stroke: 'rgb(38, 181, 242)',\n  strokeWidth: 2,\n  fill: 'rgb(189,189,189)',\n  fillOpacity: 0.3,\n};\n\nconst HOVERED_STYLE = {\n  stroke: 'rgb(38, 181, 242)',\n  strokeWidth: 2,\n  fill: 'rgb(122,202,67)',\n  fillOpacity: 0.3,\n};\n\nconst UNCOMMITTED_STYLE = {\n  stroke: 'rgb(189,189,189)',\n  strokeDasharray: '4,2',\n  strokeWidth: 2,\n  fill: 'rgb(189,189,189)',\n  fillOpacity: 0.1,\n};\n\nconst INACTIVE_STYLE = UNCOMMITTED_STYLE;\n\nconst DEFAULT_STYLE = {\n  stroke: '#000000',\n  strokeWidth: 2,\n  fill: '#a9a9a9',\n  fillOpacity: 0.1,\n};\n\nexport function featureStyle({ feature, state }) {\n  const type = feature.properties.shape || feature.geometry.type;\n  let style = null;\n\n  switch (state) {\n    case RENDER_STATE.SELECTED:\n      style = { ...SELECTED_STYLE };\n      break;\n\n    case RENDER_STATE.HOVERED:\n      style = { ...HOVERED_STYLE };\n      break;\n\n    case RENDER_STATE.UNCOMMITTED:\n    case RENDER_STATE.CLOSING:\n      style = { ...UNCOMMITTED_STYLE };\n      break;\n\n    case RENDER_STATE.INACTIVE:\n      style = { ...INACTIVE_STYLE };\n      break;\n\n    default:\n      style = { ...DEFAULT_STYLE };\n  }\n\n  switch (type) {\n    case SHAPE.POINT:\n      style.r = CIRCLE_RADIUS;\n      break;\n    case SHAPE.LINE_STRING:\n      style.fill = 'none';\n      break;\n    case SHAPE.POLYGON:\n      if (state === RENDER_STATE.CLOSING) {\n        style.strokeDasharray = '4,2';\n      }\n\n      break;\n    case SHAPE.RECTANGLE:\n      if (state === RENDER_STATE.UNCOMMITTED) {\n        style.strokeDasharray = '4,2';\n      }\n\n      break;\n    default:\n  }\n\n  return style;\n}\n\nexport function editHandleStyle({ feature, shape, index, state }) {\n  let style = {};\n  switch (state) {\n    case RENDER_STATE.SELECTED:\n      style = { ...SELECTED_STYLE };\n      break;\n\n    case RENDER_STATE.HOVERED:\n      style = { ...HOVERED_STYLE };\n      break;\n\n    case RENDER_STATE.UNCOMMITTED:\n    case RENDER_STATE.CLOSING:\n      style = { ...UNCOMMITTED_STYLE };\n      break;\n\n    case RENDER_STATE.INACTIVE:\n      style = { ...INACTIVE_STYLE };\n      break;\n\n    default:\n      style = { ...DEFAULT_STYLE };\n  }\n\n  switch (shape) {\n    case 'circle':\n      //@ts-ignore\n      style.r = CIRCLE_RADIUS;\n      break;\n    case 'rect':\n      style = { ...style, ...RECT_STYLE };\n      break;\n    default:\n  }\n\n  return style;\n}\n"]},"metadata":{},"sourceType":"script"}