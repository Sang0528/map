{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _reactMapGl = require(\"react-map-gl\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _editModes = require(\"@nebula.gl/edit-modes\");\n\nvar _editingMode = _interopRequireDefault(require(\"./edit-modes/editing-mode\"));\n\nvar _utils = require(\"./edit-modes/utils\");\n\nvar _constants = require(\"./constants\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar defaultProps = {\n  selectable: true,\n  mode: null,\n  features: null,\n  onSelect: null,\n  onUpdate: null,\n  onUpdateCursor: function onUpdateCursor() {}\n};\nvar defaultState = {\n  featureCollection: new _editModes.ImmutableFeatureCollection({\n    type: 'FeatureCollection',\n    features: []\n  }),\n  selectedFeatureIndex: null,\n  selectedEditHandleIndexes: [],\n  // index, isGuide, mapCoords, screenCoords\n  hovered: null,\n  isDragging: false,\n  didDrag: false,\n  lastPointerMoveEvent: null,\n  pointerDownPicks: null,\n  pointerDownScreenCoords: null,\n  pointerDownMapCoords: null\n};\n\nvar ModeHandler = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ModeHandler, _React$PureComponent);\n\n  var _super = _createSuper(ModeHandler);\n\n  function ModeHandler(props) {\n    var _this;\n\n    _classCallCheck(this, ModeHandler);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"_events\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_eventsRegistered\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_modeHandler\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_context\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_containerRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"getFeatures\", function () {\n      var featureCollection = _this._getFeatureCollection();\n\n      featureCollection = featureCollection && featureCollection.getObject();\n      return featureCollection && featureCollection.features;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addFeatures\", function (features) {\n      var featureCollection = _this._getFeatureCollection();\n\n      if (featureCollection) {\n        if (!Array.isArray(features)) {\n          features = [features];\n        }\n\n        featureCollection = featureCollection.addFeatures(features);\n\n        _this.setState({\n          featureCollection: featureCollection\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteFeatures\", function (featureIndexes) {\n      var featureCollection = _this._getFeatureCollection();\n\n      var selectedFeatureIndex = _this._getSelectedFeatureIndex();\n\n      if (featureCollection) {\n        if (!Array.isArray(featureIndexes)) {\n          featureIndexes = [featureIndexes];\n        }\n\n        featureCollection = featureCollection.deleteFeatures(featureIndexes);\n        var newState = {\n          featureCollection: featureCollection\n        };\n\n        if (featureIndexes.findIndex(function (index) {\n          return selectedFeatureIndex === index;\n        }) >= 0) {\n          newState.selectedFeatureIndex = null;\n          newState.selectedEditHandleIndexes = [];\n        }\n\n        _this.setState(newState);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteHandles\", function (featureIndex, handleIndexes) {\n      var featureCollection = _this._getFeatureCollection();\n\n      if (!featureIndex) {\n        featureIndex = _this._getSelectedFeatureIndex();\n      }\n\n      if (!handleIndexes) {\n        if (!_this.state.selectedEditHandleIndexes.length) {\n          return featureCollection;\n        }\n\n        handleIndexes = _this.state.selectedEditHandleIndexes;\n      }\n\n      var features = featureCollection.getObject().features; // It seems currently only POLYGON and LINE_STRING are supported\n      // see handleClick event in editing-mode.ts\n\n      var allowedTypes = [_constants.GEOJSON_TYPE.LINE_STRING, _constants.GEOJSON_TYPE.POLYGON];\n\n      if (featureIndex !== null && features[featureIndex] && allowedTypes.includes(features[featureIndex].geometry.type)) {\n        // Remove first indexes in DESC order\n        handleIndexes.sort(function (n1, n2) {\n          return n2 - n1;\n        });\n        var positionIndexes;\n\n        if (features[featureIndex].geometry.type === _constants.GEOJSON_TYPE.LINE_STRING) {\n          positionIndexes = handleIndexes.map(function (pos) {\n            return [pos];\n          });\n        } else {\n          // Currently only spport to handle simple polygons, thus pos 0\n          positionIndexes = handleIndexes.map(function (pos) {\n            return [0, pos];\n          });\n        }\n\n        positionIndexes.forEach(function (pos) {\n          featureCollection = featureCollection.removePosition(featureIndex, pos);\n        });\n\n        var selectedEditHandleIndexes = _this.state.selectedEditHandleIndexes.filter(function (handleIndex) {\n          return !handleIndexes.includes(handleIndex);\n        });\n\n        _this.setState({\n          featureCollection: featureCollection,\n          selectedEditHandleIndexes: selectedEditHandleIndexes\n        });\n      }\n\n      return featureCollection;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getMemorizedFeatureCollection\", (0, _editModes._memoize)(function (_ref) {\n      var propsFeatures = _ref.propsFeatures,\n          stateFeatures = _ref.stateFeatures;\n      var features = propsFeatures || stateFeatures; // Any changes in ImmutableFeatureCollection will create a new object\n\n      if (features instanceof _editModes.ImmutableFeatureCollection) {\n        return features;\n      }\n\n      if (features && features.type === 'FeatureCollection') {\n        return new _editModes.ImmutableFeatureCollection({\n          type: 'FeatureCollection',\n          features: features.features\n        });\n      }\n\n      return new _editModes.ImmutableFeatureCollection({\n        type: 'FeatureCollection',\n        features: features || []\n      });\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_getFeatureCollection\", function () {\n      return _this._getMemorizedFeatureCollection({\n        propsFeatures: _this.props.features,\n        stateFeatures: _this.state.featureCollection\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setupModeHandler\", function () {\n      var mode = _this.props.mode;\n      _this._modeHandler = mode;\n\n      if (!mode) {\n        _this._degregisterEvents();\n\n        return;\n      }\n\n      _this._registerEvents();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_clearEditingState\", function () {\n      _this.setState({\n        selectedFeatureIndex: null,\n        selectedEditHandleIndexes: [],\n        hovered: null,\n        pointerDownPicks: null,\n        pointerDownScreenCoords: null,\n        pointerDownMapCoords: null,\n        isDragging: false,\n        didDrag: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getSelectedFeatureIndex\", function () {\n      if ('selectedFeatureIndex' in _this.props) {\n        return _this.props.selectedFeatureIndex;\n      }\n\n      return _this.state.selectedFeatureIndex;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSelect\", function (selected) {\n      var selectedFeatureIndex = selected.selectedFeatureIndex;\n      var selectedEditHandleIndexes = _this.state.selectedEditHandleIndexes;\n      var newState = {\n        selectedFeatureIndex: selectedFeatureIndex,\n        selectedEditHandleIndexes: selectedEditHandleIndexes\n      };\n\n      if (_this.state.selectedFeatureIndex !== selectedFeatureIndex) {\n        newState.selectedEditHandleIndexes = [];\n      }\n\n      _this.setState(newState);\n\n      if (_this.props.onSelect) {\n        _this.props.onSelect(selected);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onEdit\", function (editAction) {\n      var editType = editAction.editType,\n          updatedData = editAction.updatedData,\n          editContext = editAction.editContext;\n      var newState = {\n        featureCollection: new _editModes.ImmutableFeatureCollection(updatedData)\n      };\n\n      if (editType === _constants.EDIT_TYPE.ADD_POSITION) {\n        // @ts-ignore\n        newState.selectedEditHandleIndexes = [];\n      }\n\n      _this.setState(newState);\n\n      switch (editType) {\n        case _constants.EDIT_TYPE.ADD_FEATURE:\n          _this._onSelect({\n            selectedFeature: null,\n            selectedFeatureIndex: null,\n            selectedEditHandleIndex: null,\n            selectedEditHandleIndexes: [],\n            screenCoords: editContext && editContext.screenCoords,\n            mapCoords: editContext && editContext.mapCoords\n          });\n\n          break;\n\n        default:\n      }\n\n      if (_this.props.onUpdate) {\n        _this.props.onUpdate({\n          data: updatedData && updatedData.features,\n          editType: editType,\n          editContext: editContext\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_degregisterEvents\", function () {\n      var eventManager = _this._context && _this._context.eventManager;\n\n      if (!_this._events || !eventManager) {\n        return;\n      }\n\n      if (_this._eventsRegistered) {\n        eventManager.off(_this._events);\n        _this._eventsRegistered = false;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerEvents\", function () {\n      var ref = _this._containerRef;\n      var eventManager = _this._context && _this._context.eventManager;\n\n      if (!_this._events || !ref || !eventManager) {\n        return;\n      }\n\n      if (_this._eventsRegistered) {\n        return;\n      }\n\n      eventManager.on(_this._events, ref);\n      _this._eventsRegistered = true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onEvent\", function (handler, evt, stopPropagation) {\n      var event = _this._getEvent(evt);\n\n      handler(event);\n\n      if (stopPropagation) {\n        evt.stopImmediatePropagation();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onClick\", function (event) {\n      var modeProps = _this.getModeProps(); // TODO refactor EditingMode\n      // @ts-ignore\n\n\n      if (_this._modeHandler instanceof _editingMode[\"default\"] || _this.props.selectable) {\n        var mapCoords = event.mapCoords,\n            screenCoords = event.screenCoords;\n        var pickedObject = event.picks && event.picks[0];\n\n        var selectedEditHandleIndexes = _toConsumableArray(_this.state.selectedEditHandleIndexes); // @ts-ignore\n\n\n        if (pickedObject && (0, _utils.isNumeric)(pickedObject.featureIndex)) {\n          var handleIndex = // @ts-ignore\n          pickedObject.type === _constants.ELEMENT_TYPE.EDIT_HANDLE ? pickedObject.index : null;\n          var index = selectedEditHandleIndexes.indexOf(handleIndex);\n\n          if (handleIndex !== null) {\n            if (index !== -1) {\n              selectedEditHandleIndexes.splice(index, 1);\n            } else {\n              selectedEditHandleIndexes.push(handleIndex);\n            }\n\n            _this.setState({\n              selectedEditHandleIndexes: selectedEditHandleIndexes\n            });\n          } // @ts-ignore\n\n\n          var selectedFeatureIndex = pickedObject.featureIndex;\n\n          _this._onSelect({\n            selectedFeature: pickedObject.object,\n            selectedFeatureIndex: selectedFeatureIndex,\n            selectedEditHandleIndex: handleIndex,\n            selectedEditHandleIndexes: selectedEditHandleIndexes,\n            // @ts-ignore\n            mapCoords: mapCoords,\n            screenCoords: screenCoords\n          });\n        } else {\n          _this._onSelect({\n            selectedFeature: null,\n            selectedFeatureIndex: null,\n            selectedEditHandleIndex: null,\n            selectedEditHandleIndexes: selectedEditHandleIndexes,\n            // @ts-ignore\n            mapCoords: mapCoords,\n            screenCoords: screenCoords\n          });\n        }\n      }\n\n      _this._modeHandler.handleClick(event, modeProps);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onDblclick\", function (event) {\n      if ((0, _utils.isNumeric)(_this._getSelectedFeatureIndex())) {\n        event.sourceEvent.stopImmediatePropagation();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onPointerMove\", function (event) {\n      // hovering\n      var hovered = _this._getHoverState(event);\n\n      var _this$state = _this.state,\n          isDragging = _this$state.isDragging,\n          didDrag = _this$state.didDrag,\n          pointerDownPicks = _this$state.pointerDownPicks,\n          pointerDownScreenCoords = _this$state.pointerDownScreenCoords,\n          pointerDownMapCoords = _this$state.pointerDownMapCoords;\n\n      if (isDragging && !didDrag && pointerDownScreenCoords) {\n        var dx = event.screenCoords[0] - pointerDownScreenCoords[0];\n        var dy = event.screenCoords[1] - pointerDownScreenCoords[1];\n\n        if (dx * dx + dy * dy > 5) {\n          _this.setState({\n            didDrag: true\n          });\n        }\n      }\n\n      var pointerMoveEvent = _objectSpread({}, event, {\n        isDragging: isDragging,\n        pointerDownPicks: pointerDownPicks,\n        pointerDownScreenCoords: pointerDownScreenCoords,\n        pointerDownMapCoords: pointerDownMapCoords,\n        cancelPan: event.sourceEvent.stopImmediatePropagation\n      });\n\n      if (_this.state.didDrag) {\n        var modeProps = _this.getModeProps();\n\n        if (_this._modeHandler.handleDragging) {\n          _this._modeHandler.handleDragging(pointerMoveEvent, modeProps);\n        } else {\n          _this._modeHandler.handlePointerMove(pointerMoveEvent, modeProps);\n        }\n      }\n\n      _this.setState({\n        hovered: hovered,\n        // @ts-ignore\n        lastPointerMoveEvent: pointerMoveEvent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onPointerDown\", function (event) {\n      var dragToDraw = _this.props.modeConfig && _this.props.modeConfig.dragToDraw;\n      var isDragging = Boolean(event.picks && event.picks[0]) || dragToDraw;\n\n      var startDraggingEvent = _objectSpread({}, event, {\n        isDragging: isDragging,\n        pointerDownScreenCoords: event.screenCoords,\n        pointerDownMapCoords: event.mapCoords,\n        cancelPan: event.sourceEvent.stopImmediatePropagation\n      });\n\n      var newState = {\n        isDragging: isDragging,\n        pointerDownPicks: event.picks,\n        pointerDownScreenCoords: event.screenCoords,\n        pointerDownMapCoords: event.mapCoords\n      }; // @ts-ignore\n\n      _this.setState(newState);\n\n      var modeProps = _this.getModeProps();\n\n      _this._modeHandler.handleStartDragging(startDraggingEvent, modeProps);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onPointerUp\", function (event) {\n      var _this$state2 = _this.state,\n          didDrag = _this$state2.didDrag,\n          pointerDownPicks = _this$state2.pointerDownPicks,\n          pointerDownScreenCoords = _this$state2.pointerDownScreenCoords,\n          pointerDownMapCoords = _this$state2.pointerDownMapCoords;\n\n      var stopDraggingEvent = _objectSpread({}, event, {\n        isDragging: false,\n        pointerDownPicks: didDrag ? pointerDownPicks : null,\n        pointerDownScreenCoords: didDrag ? pointerDownScreenCoords : null,\n        pointerDownMapCoords: didDrag ? pointerDownMapCoords : null,\n        cancelPan: event.sourceEvent.cancelPan\n      });\n\n      var newState = {\n        isDragging: false,\n        didDrag: false,\n        pointerDownPicks: null,\n        pointerDownScreenCoords: null,\n        pointerDownMapCoords: null\n      };\n\n      _this.setState(newState);\n\n      var modeProps = _this.getModeProps();\n\n      if (didDrag) {\n        _this._modeHandler.handleStopDragging(stopDraggingEvent, modeProps);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onPan\", function (event) {\n      var isDragging = _this.state.isDragging;\n\n      if (isDragging) {\n        event.sourceEvent.stopImmediatePropagation();\n      }\n\n      if (_this._modeHandler.handlePan) {\n        _this._modeHandler.handlePan(event, _this.getModeProps());\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"project\", function (pt) {\n      var viewport = _this._context && _this._context.viewport;\n      return viewport && viewport.project(pt);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unproject\", function (pt) {\n      var viewport = _this._context && _this._context.viewport;\n      return viewport && viewport.unproject(pt);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getHoverState\", function (event) {\n      var object = event.picks && event.picks[0];\n\n      if (!object) {\n        return null;\n      }\n\n      return _objectSpread({\n        screenCoords: event.screenCoords,\n        mapCoords: event.mapCoords\n      }, object);\n    });\n\n    _this.state = defaultState;\n    _this._eventsRegistered = false;\n    _this._events = {\n      anyclick: function anyclick(evt) {\n        return _this._onEvent(_this._onClick, evt, true);\n      },\n      dblclick: function dblclick(evt) {\n        return _this._onEvent(_this._onDblclick, evt, false);\n      },\n      click: function click(evt) {\n        return evt.stopImmediatePropagation();\n      },\n      pointermove: function pointermove(evt) {\n        return _this._onEvent(_this._onPointerMove, evt, false);\n      },\n      pointerdown: function pointerdown(evt) {\n        return _this._onEvent(_this._onPointerDown, evt, true);\n      },\n      pointerup: function pointerup(evt) {\n        return _this._onEvent(_this._onPointerUp, evt, true);\n      },\n      panmove: function panmove(evt) {\n        return _this._onEvent(_this._onPan, evt, false);\n      },\n      panstart: function panstart(evt) {\n        return _this._onEvent(_this._onPan, evt, false);\n      },\n      panend: function panend(evt) {\n        return _this._onEvent(_this._onPan, evt, false);\n      }\n    };\n    return _this;\n  }\n\n  _createClass(ModeHandler, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setupModeHandler();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.mode !== this.props.mode) {\n        this._clearEditingState();\n\n        this._setupModeHandler();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._degregisterEvents();\n    }\n  }, {\n    key: \"getModeProps\",\n    value: function getModeProps() {\n      var featureCollection = this._getFeatureCollection();\n\n      var lastPointerMoveEvent = this.state.lastPointerMoveEvent;\n\n      var selectedFeatureIndex = this._getSelectedFeatureIndex();\n\n      var selectedEditHandleIndexes = this.state.selectedEditHandleIndexes;\n      var viewport = this._context && this._context.viewport;\n      return {\n        data: featureCollection && featureCollection.featureCollection,\n        selectedIndexes: (0, _utils.isNumeric)(selectedFeatureIndex) ? [selectedFeatureIndex] : [],\n        selectedEditHandleIndexes: selectedEditHandleIndexes,\n        lastPointerMoveEvent: lastPointerMoveEvent,\n        viewport: viewport,\n        featuresDraggable: this.props.featuresDraggable,\n        onEdit: this._onEdit,\n        onUpdateCursor: this.props.onUpdateCursor,\n        modeConfig: this.props.modeConfig\n      };\n    }\n    /* MEMORIZERS */\n\n  }, {\n    key: \"_getEvent\",\n    value: function _getEvent(evt) {\n      var features = this.getFeatures();\n\n      var guides = this._modeHandler.getGuides(this.getModeProps());\n\n      var picked = (0, _utils.parseEventElement)(evt, features, guides && guides.features);\n      var screenCoords = (0, _utils.getScreenCoords)(evt); // @ts-ignore\n\n      var mapCoords = this.unproject(screenCoords);\n      return {\n        picks: picked ? [picked] : null,\n        screenCoords: screenCoords,\n        mapCoords: mapCoords,\n        sourceEvent: evt\n      };\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      return /*#__PURE__*/React.createElement(\"div\", null);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(_reactMapGl._MapContext.Consumer, null, function (context) {\n        _this2._context = context;\n        var viewport = context && context.viewport;\n\n        if (!viewport || viewport.height <= 0 || viewport.width <= 0) {\n          return null;\n        }\n\n        return _this2._render();\n      });\n    }\n  }]);\n\n  return ModeHandler;\n}(React.PureComponent);\n\nexports[\"default\"] = ModeHandler;\n\n_defineProperty(ModeHandler, \"displayName\", 'ModeHandler');\n\n_defineProperty(ModeHandler, \"defaultProps\", defaultProps);","map":{"version":3,"sources":["../src/mode-handler.tsx"],"names":["defaultProps","selectable","mode","features","onSelect","onUpdate","onUpdateCursor","defaultState","featureCollection","ImmutableFeatureCollection","type","selectedFeatureIndex","selectedEditHandleIndexes","hovered","isDragging","didDrag","lastPointerMoveEvent","pointerDownPicks","pointerDownScreenCoords","pointerDownMapCoords","ModeHandler","React","PureComponent","anyclick","dblclick","click","evt","pointermove","pointerdown","pointerup","panmove","panstart","panend","prevProps","Array","featureIndexes","newState","featureIndex","handleIndexes","allowedTypes","GEOJSON_TYPE","n2","positionIndexes","viewport","data","selectedIndexes","featuresDraggable","onEdit","modeConfig","propsFeatures","stateFeatures","selected","editType","updatedData","editContext","editAction","EDIT_TYPE","selectedFeature","selectedEditHandleIndex","screenCoords","mapCoords","eventManager","ref","event","handler","modeProps","EditingMode","pickedObject","handleIndex","ELEMENT_TYPE","index","dx","dy","pointerMoveEvent","cancelPan","stopImmediatePropagation","dragToDraw","Boolean","startDraggingEvent","stopDraggingEvent","guides","picked","picks","sourceEvent","object","context"],"mappings":"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","sourcesContent":["import { _MapContext as MapContext, MapContextProps } from 'react-map-gl';\nimport * as React from 'react';\nimport {\n  ImmutableFeatureCollection,\n  Feature,\n  FeatureCollection,\n  EditAction,\n  _memoize as memoize,\n} from '@nebula.gl/edit-modes';\n\nimport { MjolnirEvent } from 'mjolnir.js';\nimport { BaseEvent, EditorProps, EditorState, SelectAction } from './types';\n\nimport EditingMode from './edit-modes/editing-mode';\nimport { getScreenCoords, parseEventElement, isNumeric } from './edit-modes/utils';\nimport { EDIT_TYPE, ELEMENT_TYPE, GEOJSON_TYPE } from './constants';\n\nconst defaultProps = {\n  selectable: true,\n  mode: null,\n  features: null,\n  onSelect: null,\n  onUpdate: null,\n  onUpdateCursor: () => {},\n};\n\nconst defaultState = {\n  featureCollection: new ImmutableFeatureCollection({\n    type: 'FeatureCollection',\n    features: [],\n  }),\n\n  selectedFeatureIndex: null,\n  selectedEditHandleIndexes: [],\n\n  // index, isGuide, mapCoords, screenCoords\n  hovered: null,\n\n  isDragging: false,\n  didDrag: false,\n\n  lastPointerMoveEvent: null,\n\n  pointerDownPicks: null,\n  pointerDownScreenCoords: null,\n  pointerDownMapCoords: null,\n};\n\nexport default class ModeHandler extends React.PureComponent<EditorProps, EditorState> {\n  static displayName = 'ModeHandler';\n  static defaultProps = defaultProps;\n\n  constructor(props: EditorProps) {\n    super(props);\n    this.state = defaultState;\n    this._eventsRegistered = false;\n\n    this._events = {\n      anyclick: (evt) => this._onEvent(this._onClick, evt, true),\n      dblclick: (evt) => this._onEvent(this._onDblclick, evt, false),\n      click: (evt) => evt.stopImmediatePropagation(),\n      pointermove: (evt) => this._onEvent(this._onPointerMove, evt, false),\n      pointerdown: (evt) => this._onEvent(this._onPointerDown, evt, true),\n      pointerup: (evt) => this._onEvent(this._onPointerUp, evt, true),\n      panmove: (evt) => this._onEvent(this._onPan, evt, false),\n      panstart: (evt) => this._onEvent(this._onPan, evt, false),\n      panend: (evt) => this._onEvent(this._onPan, evt, false),\n    };\n  }\n\n  componentDidMount() {\n    this._setupModeHandler();\n  }\n\n  componentDidUpdate(prevProps: EditorProps) {\n    if (prevProps.mode !== this.props.mode) {\n      this._clearEditingState();\n      this._setupModeHandler();\n    }\n  }\n\n  componentWillUnmount() {\n    this._degregisterEvents();\n  }\n\n  _events: any;\n  _eventsRegistered: boolean;\n  _modeHandler: any;\n  _context: MapContextProps | null | undefined;\n  _containerRef: HTMLElement | null | undefined;\n\n  getFeatures = () => {\n    let featureCollection = this._getFeatureCollection();\n    featureCollection = featureCollection && featureCollection.getObject();\n    return featureCollection && featureCollection.features;\n  };\n\n  addFeatures = (features: Feature | Feature[]) => {\n    let featureCollection = this._getFeatureCollection();\n    if (featureCollection) {\n      if (!Array.isArray(features)) {\n        features = [features];\n      }\n\n      featureCollection = featureCollection.addFeatures(features);\n      this.setState({ featureCollection });\n    }\n  };\n\n  deleteFeatures = (featureIndexes: number | number[]) => {\n    let featureCollection = this._getFeatureCollection();\n    const selectedFeatureIndex = this._getSelectedFeatureIndex();\n    if (featureCollection) {\n      if (!Array.isArray(featureIndexes)) {\n        featureIndexes = [featureIndexes];\n      }\n      featureCollection = featureCollection.deleteFeatures(featureIndexes);\n      const newState: any = { featureCollection };\n      if (featureIndexes.findIndex((index) => selectedFeatureIndex === index) >= 0) {\n        newState.selectedFeatureIndex = null;\n        newState.selectedEditHandleIndexes = [];\n      }\n      this.setState(newState);\n    }\n  };\n\n  deleteHandles = (\n    featureIndex: number | undefined,\n    handleIndexes: number[] | undefined\n  ): FeatureCollection => {\n    let featureCollection = this._getFeatureCollection();\n    if (!featureIndex) {\n      featureIndex = this._getSelectedFeatureIndex();\n    }\n    if (!handleIndexes) {\n      if (!this.state.selectedEditHandleIndexes.length) {\n        return featureCollection;\n      }\n      handleIndexes = this.state.selectedEditHandleIndexes;\n    }\n    const features = featureCollection.getObject().features;\n    // It seems currently only POLYGON and LINE_STRING are supported\n    // see handleClick event in editing-mode.ts\n    const allowedTypes = [GEOJSON_TYPE.LINE_STRING, GEOJSON_TYPE.POLYGON];\n    if (\n      featureIndex !== null &&\n      features[featureIndex] &&\n      allowedTypes.includes(features[featureIndex].geometry.type)\n    ) {\n      // Remove first indexes in DESC order\n      handleIndexes.sort((n1, n2) => n2 - n1);\n      let positionIndexes;\n      if (features[featureIndex].geometry.type === GEOJSON_TYPE.LINE_STRING) {\n        positionIndexes = handleIndexes.map((pos) => [pos]);\n      } else {\n        // Currently only spport to handle simple polygons, thus pos 0\n        positionIndexes = handleIndexes.map((pos) => [0, pos]);\n      }\n      positionIndexes.forEach((pos) => {\n        featureCollection = featureCollection.removePosition(featureIndex, pos);\n      });\n      const selectedEditHandleIndexes = this.state.selectedEditHandleIndexes.filter(\n        (handleIndex) => !handleIndexes.includes(handleIndex)\n      );\n      this.setState({ featureCollection, selectedEditHandleIndexes });\n    }\n    return featureCollection;\n  };\n\n  getModeProps() {\n    const featureCollection = this._getFeatureCollection();\n\n    const { lastPointerMoveEvent } = this.state;\n    const selectedFeatureIndex = this._getSelectedFeatureIndex();\n    const selectedEditHandleIndexes = this.state.selectedEditHandleIndexes;\n    const viewport = this._context && this._context.viewport;\n\n    return {\n      data: featureCollection && featureCollection.featureCollection,\n      selectedIndexes: isNumeric(selectedFeatureIndex) ? [selectedFeatureIndex] : [],\n      selectedEditHandleIndexes,\n      lastPointerMoveEvent,\n      viewport,\n      featuresDraggable: this.props.featuresDraggable,\n      onEdit: this._onEdit,\n      onUpdateCursor: this.props.onUpdateCursor,\n      modeConfig: this.props.modeConfig,\n    };\n  }\n\n  /* MEMORIZERS */\n  _getMemorizedFeatureCollection = memoize(({ propsFeatures, stateFeatures }: any) => {\n    const features = propsFeatures || stateFeatures;\n    // Any changes in ImmutableFeatureCollection will create a new object\n    if (features instanceof ImmutableFeatureCollection) {\n      return features;\n    }\n\n    if (features && features.type === 'FeatureCollection') {\n      return new ImmutableFeatureCollection({\n        type: 'FeatureCollection',\n        features: features.features,\n      });\n    }\n\n    return new ImmutableFeatureCollection({\n      type: 'FeatureCollection',\n      features: features || [],\n    });\n  });\n\n  _getFeatureCollection = () => {\n    return this._getMemorizedFeatureCollection({\n      propsFeatures: this.props.features,\n      stateFeatures: this.state.featureCollection,\n    });\n  };\n\n  _setupModeHandler = () => {\n    const mode = this.props.mode;\n    this._modeHandler = mode;\n\n    if (!mode) {\n      this._degregisterEvents();\n      return;\n    }\n\n    this._registerEvents();\n  };\n\n  /* EDITING OPERATIONS */\n  _clearEditingState = () => {\n    this.setState({\n      selectedFeatureIndex: null,\n      selectedEditHandleIndexes: [],\n\n      hovered: null,\n\n      pointerDownPicks: null,\n      pointerDownScreenCoords: null,\n      pointerDownMapCoords: null,\n\n      isDragging: false,\n      didDrag: false,\n    });\n  };\n\n  _getSelectedFeatureIndex = () => {\n    if ('selectedFeatureIndex' in this.props) {\n      return this.props.selectedFeatureIndex;\n    }\n    return this.state.selectedFeatureIndex;\n  };\n\n  _onSelect = (selected: SelectAction) => {\n    const { selectedFeatureIndex } = selected;\n    const { selectedEditHandleIndexes } = this.state;\n    const newState = { selectedFeatureIndex, selectedEditHandleIndexes };\n    if (this.state.selectedFeatureIndex !== selectedFeatureIndex) {\n      newState.selectedEditHandleIndexes = [];\n    }\n    this.setState(newState);\n    if (this.props.onSelect) {\n      this.props.onSelect(selected);\n    }\n  };\n\n  _onEdit = (editAction: EditAction<any>) => {\n    const { editType, updatedData, editContext } = editAction;\n    const newState = { featureCollection: new ImmutableFeatureCollection(updatedData) };\n    if (editType === EDIT_TYPE.ADD_POSITION) {\n      // @ts-ignore\n      newState.selectedEditHandleIndexes = [];\n    }\n    this.setState(newState);\n\n    switch (editType) {\n      case EDIT_TYPE.ADD_FEATURE:\n        this._onSelect({\n          selectedFeature: null,\n          selectedFeatureIndex: null,\n          selectedEditHandleIndex: null,\n          selectedEditHandleIndexes: [],\n          screenCoords: editContext && editContext.screenCoords,\n          mapCoords: editContext && editContext.mapCoords,\n        });\n        break;\n      default:\n    }\n\n    if (this.props.onUpdate) {\n      this.props.onUpdate({\n        data: updatedData && updatedData.features,\n        editType,\n        editContext,\n      });\n    }\n  };\n\n  /* EVENTS */\n  _degregisterEvents = () => {\n    const eventManager = this._context && this._context.eventManager;\n    if (!this._events || !eventManager) {\n      return;\n    }\n\n    if (this._eventsRegistered) {\n      eventManager.off(this._events);\n      this._eventsRegistered = false;\n    }\n  };\n\n  _registerEvents = () => {\n    const ref = this._containerRef;\n    const eventManager = this._context && this._context.eventManager;\n    if (!this._events || !ref || !eventManager) {\n      return;\n    }\n\n    if (this._eventsRegistered) {\n      return;\n    }\n\n    eventManager.on(this._events, ref);\n    this._eventsRegistered = true;\n  };\n\n  _onEvent = (handler: Function, evt: MjolnirEvent, stopPropagation: boolean) => {\n    const event = this._getEvent(evt);\n    handler(event);\n\n    if (stopPropagation) {\n      evt.stopImmediatePropagation();\n    }\n  };\n\n  _onClick = (event: BaseEvent) => {\n    const modeProps = this.getModeProps();\n    // TODO refactor EditingMode\n    // @ts-ignore\n    if (this._modeHandler instanceof EditingMode || this.props.selectable) {\n      const { mapCoords, screenCoords } = event;\n      const pickedObject = event.picks && event.picks[0];\n      const selectedEditHandleIndexes = [...this.state.selectedEditHandleIndexes];\n      // @ts-ignore\n      if (pickedObject && isNumeric(pickedObject.featureIndex)) {\n        const handleIndex =\n          // @ts-ignore\n          pickedObject.type === ELEMENT_TYPE.EDIT_HANDLE ? pickedObject.index : null;\n        const index = selectedEditHandleIndexes.indexOf(handleIndex);\n        if (handleIndex !== null) {\n          if (index !== -1) {\n            selectedEditHandleIndexes.splice(index, 1);\n          } else {\n            selectedEditHandleIndexes.push(handleIndex);\n          }\n          this.setState({ selectedEditHandleIndexes });\n        }\n        // @ts-ignore\n        const selectedFeatureIndex = pickedObject.featureIndex;\n        this._onSelect({\n          selectedFeature: pickedObject.object,\n          selectedFeatureIndex,\n          selectedEditHandleIndex: handleIndex,\n          selectedEditHandleIndexes,\n          // @ts-ignore\n          mapCoords,\n          screenCoords,\n        });\n      } else {\n        this._onSelect({\n          selectedFeature: null,\n          selectedFeatureIndex: null,\n          selectedEditHandleIndex: null,\n          selectedEditHandleIndexes,\n          // @ts-ignore\n          mapCoords,\n          screenCoords,\n        });\n      }\n    }\n\n    this._modeHandler.handleClick(event, modeProps);\n  };\n\n  _onDblclick = (event: BaseEvent) => {\n    if (isNumeric(this._getSelectedFeatureIndex())) {\n      event.sourceEvent.stopImmediatePropagation();\n    }\n  };\n\n  _onPointerMove = (event: BaseEvent) => {\n    // hovering\n    const hovered = this._getHoverState(event);\n    const {\n      isDragging,\n      didDrag,\n      pointerDownPicks,\n      pointerDownScreenCoords,\n      pointerDownMapCoords,\n    } = this.state;\n\n    if (isDragging && !didDrag && pointerDownScreenCoords) {\n      const dx = event.screenCoords[0] - pointerDownScreenCoords[0];\n      const dy = event.screenCoords[1] - pointerDownScreenCoords[1];\n      if (dx * dx + dy * dy > 5) {\n        this.setState({ didDrag: true });\n      }\n    }\n\n    const pointerMoveEvent = {\n      ...event,\n      isDragging,\n      pointerDownPicks,\n      pointerDownScreenCoords,\n      pointerDownMapCoords,\n      cancelPan: event.sourceEvent.stopImmediatePropagation,\n    };\n\n    if (this.state.didDrag) {\n      const modeProps = this.getModeProps();\n      if (this._modeHandler.handleDragging) {\n        this._modeHandler.handleDragging(pointerMoveEvent, modeProps);\n      } else {\n        this._modeHandler.handlePointerMove(pointerMoveEvent, modeProps);\n      }\n    }\n\n    this.setState({\n      hovered,\n      // @ts-ignore\n      lastPointerMoveEvent: pointerMoveEvent,\n    });\n  };\n\n  _onPointerDown = (event: BaseEvent) => {\n    const dragToDraw = this.props.modeConfig && this.props.modeConfig.dragToDraw;\n    const isDragging = Boolean(event.picks && event.picks[0]) || dragToDraw;\n    const startDraggingEvent = {\n      ...event,\n      isDragging,\n      pointerDownScreenCoords: event.screenCoords,\n      pointerDownMapCoords: event.mapCoords,\n      cancelPan: event.sourceEvent.stopImmediatePropagation,\n    };\n\n    const newState = {\n      isDragging,\n      pointerDownPicks: event.picks,\n      pointerDownScreenCoords: event.screenCoords,\n      pointerDownMapCoords: event.mapCoords,\n    };\n    // @ts-ignore\n    this.setState(newState);\n\n    const modeProps = this.getModeProps();\n    this._modeHandler.handleStartDragging(startDraggingEvent, modeProps);\n  };\n\n  _onPointerUp = (event: BaseEvent) => {\n    const { didDrag, pointerDownPicks, pointerDownScreenCoords, pointerDownMapCoords } = this.state;\n    const stopDraggingEvent = {\n      ...event,\n      isDragging: false,\n      pointerDownPicks: didDrag ? pointerDownPicks : null,\n      pointerDownScreenCoords: didDrag ? pointerDownScreenCoords : null,\n      pointerDownMapCoords: didDrag ? pointerDownMapCoords : null,\n      cancelPan: event.sourceEvent.cancelPan,\n    };\n\n    const newState = {\n      isDragging: false,\n      didDrag: false,\n      pointerDownPicks: null,\n      pointerDownScreenCoords: null,\n      pointerDownMapCoords: null,\n    };\n\n    this.setState(newState);\n    const modeProps = this.getModeProps();\n\n    if (didDrag) {\n      this._modeHandler.handleStopDragging(stopDraggingEvent, modeProps);\n    }\n  };\n\n  _onPan = (event: BaseEvent) => {\n    const { isDragging } = this.state;\n    if (isDragging) {\n      event.sourceEvent.stopImmediatePropagation();\n    }\n    if (this._modeHandler.handlePan) {\n      this._modeHandler.handlePan(event, this.getModeProps());\n    }\n  };\n\n  /* HELPERS */\n  project = (pt: [number, number]) => {\n    const viewport = this._context && this._context.viewport;\n    return viewport && viewport.project(pt);\n  };\n\n  unproject = (pt: [number, number]) => {\n    const viewport = this._context && this._context.viewport;\n    return viewport && viewport.unproject(pt);\n  };\n\n  _getEvent(evt: MjolnirEvent) {\n    const features = this.getFeatures();\n    const guides = this._modeHandler.getGuides(this.getModeProps());\n    const picked = parseEventElement(evt, features, guides && guides.features);\n    const screenCoords = getScreenCoords(evt);\n    // @ts-ignore\n    const mapCoords = this.unproject(screenCoords);\n\n    return {\n      picks: picked ? [picked] : null,\n      screenCoords,\n      mapCoords,\n      sourceEvent: evt,\n    };\n  }\n\n  _getHoverState = (event: BaseEvent) => {\n    const object = event.picks && event.picks[0];\n    if (!object) {\n      return null;\n    }\n\n    return {\n      screenCoords: event.screenCoords,\n      mapCoords: event.mapCoords,\n      ...object,\n    };\n  };\n\n  _render() {\n    return <div />;\n  }\n\n  render() {\n    return (\n      <MapContext.Consumer>\n        {(context) => {\n          this._context = context;\n          const viewport = context && context.viewport;\n\n          if (!viewport || viewport.height <= 0 || viewport.width <= 0) {\n            return null;\n          }\n\n          return this._render();\n        }}\n      </MapContext.Consumer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}